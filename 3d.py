import logging
from telegram import (
    Update,
    ReplyKeyboardMarkup,
    KeyboardButton,
    InlineKeyboardMarkup,
    InlineKeyboardButton
)
from telegram.ext import (
    Application,
    CommandHandler,
    MessageHandler,
    ConversationHandler,
    ContextTypes,
    filters
)

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)
logger = logging.getLogger(__name__)

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –±–æ—Ç–∞
BOT_TOKEN = "8106031721:AAFP808M6HZH2pGuFGQjPCb-sWnRkDYbBJM"
GROUP_CHAT_ID = -4912732887

# –†–∞–∑—Ä–µ—à–µ–Ω–Ω—ã–µ —Ñ–æ—Ä–º–∞—Ç—ã —Ñ–∞–π–ª–æ–≤
ALLOWED_3D_FILES = {'stl', 'obj', '3mf', 'amf', 'step', 'stp'}
ALLOWED_IMAGES = {'jpg', 'jpeg', 'png', 'gif'}
ALLOWED_EXTENSIONS = ALLOWED_3D_FILES | ALLOWED_IMAGES

# –°–æ—Å—Ç–æ—è–Ω–∏—è —Ñ–æ—Ä–º—ã
(
    START,
    FILE_OR_LINK,
    MODEL_NAME,
    DESCRIPTION,
    WHEEL_COMPAT,
    PRINT_SETTINGS,
    IS_AUTHOR,
    AUTHOR_INFO,
    THINGIVERSE,
    SHOW_AUTHOR,
    FINISH
) = range(11)

# –¢–µ–∫—Å—Ç—ã —Å–æ–æ–±—â–µ–Ω–∏–π
WELCOME_TEXT = """
<b>üåü –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –±–æ—Ç –¥–ª—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ 3D-–º–æ–¥–µ–ª–µ–π! üåü</b>

–ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ –ø–æ–¥–µ–ª–∏—Ç—å—Å—è —Å–≤–æ–∏–º–∏ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞–º–∏ –¥–ª—è –º–æ–Ω–æ–∫–æ–ª—ë—Å, —á—Ç–æ–±—ã –º—ã —Ä–∞–∑–º–µ—Å—Ç–∏–ª–∏ –∏—Ö –Ω–∞ —Å–∞–π—Ç–µ eucer.ru –¥–ª—è —Å–≤–æ–±–æ–¥–Ω–æ–≥–æ —Å–∫–∞—á–∏–≤–∞–Ω–∏—è.

<b>üìå –ö–∞–∫ —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç:</b>
1. –í—ã –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç–µ –º–æ–¥–µ–ª—å (—Ñ–∞–π–ª –∏–ª–∏ —Å—Å—ã–ª–∫—É)
2. –î–æ–±–∞–≤–ª—è–µ—Ç–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –º–æ–¥–µ–ª–∏
3. –ú—ã –ø—Ä–æ–≤–µ—Ä—è–µ–º –∏ –ø—É–±–ª–∏–∫—É–µ–º –µ—ë –Ω–∞ —Å–∞–π—Ç–µ

–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:
"""

ABOUT_TEXT = """
<b>ü§ñ –û –±–æ—Ç–µ –∏ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –º–æ–¥–µ–ª–µ–π</b>

–≠—Ç–æ—Ç –±–æ—Ç —Å–æ–∑–¥–∞–Ω –¥–ª—è —Å–±–æ—Ä–∞ 3D-–º–æ–¥–µ–ª–µ–π, —Å–≤—è–∑–∞–Ω–Ω—ã—Ö —Å –º–æ–Ω–æ–∫–æ–ª—ë—Å–∞–º–∏, –∏ –∏—Ö –ø–æ—Å–ª–µ–¥—É—é—â–µ–π –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –Ω–∞ —Å–∞–π—Ç–µ eucer.ru.
–ú—ã –ø—Ä–∏–Ω–∏–º–∞–µ–º –∫–∞–∫ —Ñ–∞–π–ª—ã –º–æ–¥–µ–ª–µ–π, —Ç–∞–∫ –∏ —Å—Å—ã–ª–∫–∏ –Ω–∞ —É–∂–µ –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–Ω—ã–µ –¥–µ—Ç–∞–ª–∏ –Ω–∞ —Ç–∞–∫–∏—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–∞—Ö, –∫–∞–∫ thingyverse, cult3D –∏ –¥—Ä.
–ú–æ–∂–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –∏ —Å—Å–ª—ã–∫–∏ –Ω–∞ —Ñ–∞–π–ª—ã, —Ä–∞–∑–º–µ—â–µ–Ω–Ω—ã–µ –≤ telegram. –í –æ–±—â–µ–º, –≤—Å—ë –¥–ª—è –≤–∞—à–µ–≥–æ —É–¥–æ–±—Å—Ç–≤–∞. 

<b>üîß –ß—Ç–æ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –ø–æ—Å–ª–µ –æ—Ç–ø—Ä–∞–≤–∫–∏:</b>
1) –ï—Å–ª–∏ 3–î –º–æ–¥–µ–ª—å —Ä–∞–∑—Ä–∞–±–∞—Ç—ã–≤–∞–ª–∏ –ù–ï –≤—ã:
‚Ä¢ –í —Å–ª—É—á–∞–µ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–∞–π–ª–∞ —Å 3D –º–æ–¥–µ–ª—å—é, –Ω–µ –∑–∞–±—É–¥—å—Ç–µ —É–∫–∞–∑–∞—Ç—å –Ω–∞–∑–≤–∞–Ω–∏–µ –∏ –æ–ø–∏—Å–∞–Ω–∏–µ –º–æ–¥–µ–ª–∏, –∞ —Ç–∞–∫–∂–µ –ø—Ä–æ—á—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é. 
‚Ä¢ –ï—Å–ª–∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç–µ —Å—Å–ª—ã–∫—É –Ω–∞ thingyverse, cult3D –∏ —Ç.–¥. - –æ–ø–∏—Å–∞–Ω–∏–µ –º—ã –º–æ–∂–µ–º –≤–∑—è—Ç—å –æ—Ç—Ç—É–¥–∞.
‚Ä¢ –ü–æ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ —É–∫–∞–∂–∏—Ç–µ, –¥–ª—è –∫–∞–∫–∏—Ö –º–æ–¥–µ–ª–µ–π –º–æ–Ω–æ–∫–æ–ª—ë—Å —ç—Ç–∞ –º–æ–¥–µ–ª—å –ø–æ–¥—Ö–æ–¥–∏—Ç. 


2) –ï—Å–ª–∏ –≤—ã - –∞–≤—Ç–æ 3D –º–æ–¥–µ–ª–∏:
‚Ä¢ –ú–æ–∂–µ—Ç–µ –≤—ã—Å–ª–∞—Ç—å —Å—Å—ã–ª–∫—É –Ω–∞ –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–Ω—É—é —Å –æ–ø–∏—Å–∞–Ω–∏–µ–º –º–æ–¥–µ–ª—å 
–ª–∏–±–æ (–µ—Å–ª–∏ –≤–∞–º –ª–µ–Ω—å) –º—ã –æ–ø—É–±–ª–∏–∫—É–µ–º —Å–∞–º–∏ –î–ª—è —ç—Ç–æ–≥–æ:
‚Ä¢ –ù–∞–ø–∏—à–∏—Ç–µ –æ–ø–∏—Å–∞–Ω–∏–µ –∏ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã, –æ—Ç–≤–µ—Ç—å—Ç–µ –Ω–∞ –ø—Ä–æ—á–∏–µ –≤–æ–ø—Ä–æ—Å—ã —Ñ–æ—Ä–º—ã
‚Ä¢ –ü–æ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ —É–∫–∞–∂–∏—Ç–µ, –¥–ª—è –∫–∞–∫–∏—Ö –º–æ–¥–µ–ª–µ–π –º–æ–Ω–æ–∫–æ–ª—ë—Å —ç—Ç–∞ –º–æ–¥–µ–ª—å –ø–æ–¥—Ö–æ–¥–∏—Ç. 
‚Ä¢ –î–∞–π—Ç–µ —Å–æ–≥–ª–∞—Å–∏–µ –Ω–∞ –ø—É–±–ª–∏–∫–∞—Ü–∏—é –º–æ–¥–µ–ª–∏ –æ—Ç eucer.ru
‚Ä¢ –£–∫–∞–∂–∏—Ç–µ, –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ª–∏ –ø—Ä–∏ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ —É–∫–∞–∑—ã–≤–∞—Ç—å –≤–∞—à–µ –∞–≤—Ç–æ—Ä—Å—Ç–≤–æ.
‚Ä¢ –ü—Ä–∏ –∂–µ–ª–∞–Ω–∏–∏ –º–æ–∂–µ—Ç–µ —É–∫–∞–∑–∞—Ç—å –∫–æ–Ω—Ç–∞–∫—Ç—ã –¥–ª—è –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏.

–ß—Ç–æ —Å–¥–µ–ª–∞–µ–º –º—ã:
‚Ä¢ C–∞–º–∏ —Ä–∞–∑–º–µ—Å—Ç–∏–º –≤–∞—à—É –º–æ–¥–µ–ª—å –Ω–∞ —Å–∞–π—Ç–µ thingyverse –æ—Ç –∞–∫–∫–∞—É–Ω—Ç–∞ eucer.ru (–µ—Å–ª–∏ –ø–æ–ª—É—á–µ–Ω–æ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ).
‚Ä¢ –°–æ–∑–¥–∞–¥–∏–º –∫–∞—Ä—Ç–∏–Ω–∫–∏ —Å 3D –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏–µ–π –≤–∞—à–µ–π –º–æ–¥–µ–ª–∏
‚Ä¢ –°–¥–µ–ª–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É –Ω–∞ —Å–∞–π—Ç–µ, –∑–∞–ø–æ–ª–Ω–∏–º –≤—Å–µ –∞—Ç—Ç—Ä–∏–±—É—Ç—ã –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–æ–≤
‚Ä¢ –ü—Ä–µ–¥–æ—Å—Ç–∞–≤–∏–º –¥–æ—Å—Ç—É–ø –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è –≤—Å–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º

<b>üìå –í–∞–∂–Ω–æ:</b>
‚Ä¢ –ü—Ä–∏–Ω–∏–º–∞—é—Ç—Å—è —Ç–æ–ª—å–∫–æ 3D –º–æ–¥–µ–ª–∏ –¥–ª—è –º–æ–Ω–æ–∫–æ–ª—ë—Å
‚Ä¢ –ê–≤—Ç–æ—Ä—Å–∫–∏–µ –ø—Ä–∞–≤–∞ –æ—Å—Ç–∞—é—Ç—Å—è –∑–∞ –∞–≤—Ç–æ—Ä–æ–º
"""

FILE_REQUIREMENTS = """
<b>üìå –¢—Ä–µ–±–æ–≤–∞–Ω–∏—è –∫ —Ñ–∞–π–ª–∞–º:</b>
‚Ä¢ <b>3D-–º–æ–¥–µ–ª–∏:</b> STL, OBJ, 3MF, STEP, STP
‚Ä¢ <b>–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è:</b> JPG, PNG (–¥–ª—è –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏–∏)
‚Ä¢ <b>–ú–∞–∫—Å. —Ä–∞–∑–º–µ—Ä:</b> 50 MB

<b>‚ùó –ï—Å–ª–∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç–µ —Ñ–∞–π–ª:</b>
1. –ü—Ä–∏–∫—Ä–µ–ø–∏—Ç–µ —Ñ–∞–π–ª –∫ —Å–æ–æ–±—â–µ–Ω–∏—é
2. –î–æ–±–∞–≤—å—Ç–µ –ø–æ–¥–ø–∏—Å—å (–µ—Å–ª–∏ –Ω—É–∂–Ω–æ)
"""

EXAMPLE_NAMES = [
    "üîπ –ö—Ä–µ–ø–ª–µ–Ω–∏–µ —Ñ–æ–Ω–∞—Ä—è –Ω–∞ Kingsong 16X",
    "üîπ –ó–∞—â–∏—Ç–∞ –ø–ª–∞—Ç—ã InMotion V11",
    "üîπ –†—É—á–∫–∞ –¥–ª—è –ø–µ—Ä–µ–Ω–æ—Å–∫–∏ Gotway MSX"
]

EXAMPLE_DESCRIPTIONS = [
    "üîπ –ö—Ä–µ–ø–ª–µ–Ω–∏–µ –ø–æ–∑–≤–æ–ª—è–µ—Ç —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Ñ–æ–Ω–∞—Ä—å –Ω–∞ —Ä—É–ª—å –±–µ–∑ —Å–≤–µ—Ä–ª–µ–Ω–∏—è. –ü–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è –ø–µ—á–∞—Ç–∏ –Ω–∞ FDM –ø—Ä–∏–Ω—Ç–µ—Ä–∞—Ö.",
    "üîπ –ó–∞—â–∏—Ç–∞ –æ—Ç –≤–æ–¥—ã –∏ –≥—Ä—è–∑–∏ –¥–ª—è –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–∞. –õ–µ–≥–∫–æ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç—Å—è –Ω–∞ —à—Ç–∞—Ç–Ω—ã–µ –∫—Ä–µ–ø–ª–µ–Ω–∏—è.",
    "üîπ –≠—Ä–≥–æ–Ω–æ–º–∏—á–Ω–∞—è —Ä—É—á–∫–∞ –¥–ª—è –ø–µ—Ä–µ–Ω–æ—Å–∫–∏ –º–æ–Ω–æ–∫–æ–ª—ë—Å–∞. –ü–µ—á–∞—Ç—å —Å –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ–º 20%."
]

# –ö–ª–∞–≤–∏–∞—Ç—É—Ä—ã
def main_menu():
    return ReplyKeyboardMarkup([
        ["üì§ –û—Ç–ø—Ä–∞–≤–∏—Ç—å –º–æ–¥–µ–ª—å", "‚ÑπÔ∏è –û –±–æ—Ç–µ"]
    ], resize_keyboard=True)

def skip_or_finish():
    return ReplyKeyboardMarkup([
        ["‚è≠ –ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å", "‚úÖ –ó–∞–≤–µ—Ä—à–∏—Ç—å"],
        ["‚ùå –û—Ç–º–µ–Ω–∞"]
    ], resize_keyboard=True)

def yes_no_keyboard():
    return ReplyKeyboardMarkup([
        ["‚úÖ –î–∞", "‚ùå –ù–µ—Ç"],
        ["‚ùå –û—Ç–º–µ–Ω–∞"]
    ], resize_keyboard=True)

def cancel_keyboard():
    return ReplyKeyboardMarkup([
        ["‚ùå –û—Ç–º–µ–Ω–∞"]
    ], resize_keyboard=True)

def get_reply_button(user_id):
    return InlineKeyboardMarkup([[
        InlineKeyboardButton("‚úâÔ∏è –û—Ç–≤–µ—Ç–∏—Ç—å –∞–≤—Ç–æ—Ä—É", url=f"tg://user?id={user_id}")
    ]])

# –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏
def is_allowed_file(filename):
    if not filename:
        return False
    ext = filename.split('.')[-1].lower()
    return ext in ALLOWED_EXTENSIONS

def is_3d_file(filename):
    ext = filename.split('.')[-1].lower()
    return ext in ALLOWED_3D_FILES

def is_link(text):
    if not text:
        return False
    return text.startswith(('http://', 'https://', 'www.'))

def format_user_info(user):
    return (
        f"üë§ <b>–ê–≤—Ç–æ—Ä:</b> {user.full_name}\n"
        f"üì± <b>Username:</b> @{user.username if user.username else '–Ω–µ—Ç'}\n"
        f"üÜî <b>ID:</b> {user.id}\n"
    )

async def forward_to_admins(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–µ—Ä–µ—Å—ã–ª–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π –≤ —á–∞—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤"""
    user = update.effective_user
    admin_message = format_user_info(user) + "\n<b>üì® –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:</b>\n\n"
    
    if update.message.text:
        admin_message += update.message.text
        await context.bot.send_message(
            chat_id=GROUP_CHAT_ID,
            text=admin_message,
            parse_mode='HTML',
            reply_markup=get_reply_button(user.id)
        )
    elif update.message.document:
        admin_message += f"üìÑ <b>–§–∞–π–ª:</b> {update.message.document.file_name}"
        if update.message.caption:
            admin_message += f"\nüìù <b>–ü–æ–¥–ø–∏—Å—å:</b> {update.message.caption}"
        
        await context.bot.send_document(
            chat_id=GROUP_CHAT_ID,
            document=update.message.document.file_id,
            caption=admin_message,
            parse_mode='HTML',
            reply_markup=get_reply_button(user.id)
        )
    elif update.message.photo:
        admin_message += "üñº <b>–§–æ—Ç–æ</b>"
        if update.message.caption:
            admin_message += f"\nüìù <b>–ü–æ–¥–ø–∏—Å—å:</b> {update.message.caption}"
        
        await context.bot.send_photo(
            chat_id=GROUP_CHAT_ID,
            photo=update.message.photo[-1].file_id,
            caption=admin_message,
            parse_mode='HTML',
            reply_markup=get_reply_button(user.id)
        )
    elif update.message.video:
        admin_message += "üé• <b>–í–∏–¥–µ–æ</b>"
        if update.message.caption:
            admin_message += f"\nüìù <b>–ü–æ–¥–ø–∏—Å—å:</b> {update.message.caption}"
        
        await context.bot.send_video(
            chat_id=GROUP_CHAT_ID,
            video=update.message.video.file_id,
            caption=admin_message,
            parse_mode='HTML',
            reply_markup=get_reply_button(user.id)
        )

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(
        WELCOME_TEXT,
        reply_markup=main_menu(),
        parse_mode='HTML'
    )

async def about(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(
        ABOUT_TEXT,
        reply_markup=main_menu(),
        parse_mode='HTML'
    )

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Ñ–æ—Ä–º—ã
async def form_start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    context.user_data.clear()
    await update.message.reply_text(
        "<b>1. –ü—Ä–∏—à–ª–∏—Ç–µ —Ñ–∞–π–ª 3D-–º–æ–¥–µ–ª–∏ –∏–ª–∏ —Å—Å—ã–ª–∫—É:</b>\n\n" + FILE_REQUIREMENTS,
        reply_markup=cancel_keyboard(),
        parse_mode='HTML'
    )
    return FILE_OR_LINK

async def handle_file_or_link(update: Update, context: ContextTypes.DEFAULT_TYPE):
    if update.message.text == "‚ùå –û—Ç–º–µ–Ω–∞":
        return await cancel_form(update, context)
    
    if update.message.document:
        if not is_allowed_file(update.message.document.file_name):
            await update.message.reply_text(
                "<b>‚ö†Ô∏è –ù–µ–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–π —Ñ–æ—Ä–º–∞—Ç —Ñ–∞–π–ª–∞!</b>\n\n" + FILE_REQUIREMENTS,
                reply_markup=cancel_keyboard(),
                parse_mode='HTML'
            )
            return FILE_OR_LINK
        
        context.user_data['file'] = {
            'id': update.message.document.file_id,
            'name': update.message.document.file_name
        }
        context.user_data['is_3d'] = is_3d_file(update.message.document.file_name)
        
        if update.message.caption:
            context.user_data['file_caption'] = update.message.caption
        
        await update.message.reply_text(
            "<b>2. –£–∫–∞–∂–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –º–æ–¥–µ–ª–∏:</b>\n\n"
            "<i>üìå –ü—Ä–∏–º–µ—Ä—ã —Ö–æ—Ä–æ—à–∏—Ö –Ω–∞–∑–≤–∞–Ω–∏–π:</i>\n" + "\n".join(EXAMPLE_NAMES),
            reply_markup=cancel_keyboard(),
            parse_mode='HTML'
        )
        return MODEL_NAME
    
    elif update.message.text and is_link(update.message.text):
        context.user_data['link'] = update.message.text
        await update.message.reply_text(
            "<b>2. –£–∫–∞–∂–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –º–æ–¥–µ–ª–∏ (–∏–ª–∏ –ø—Ä–æ–ø—É—Å—Ç–∏—Ç–µ):</b>\n\n"
            "<i>üìå –ü—Ä–∏–º–µ—Ä—ã:</i>\n" + "\n".join(EXAMPLE_NAMES),
            reply_markup=skip_or_finish(),
            parse_mode='HTML'
        )
        return MODEL_NAME
    
    await update.message.reply_text(
        "<b>–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–∏—à–ª–∏—Ç–µ —Ñ–∞–π–ª 3D-–º–æ–¥–µ–ª–∏ –∏–ª–∏ —Å—Å—ã–ª–∫—É</b>",
        reply_markup=cancel_keyboard(),
        parse_mode='HTML'
    )
    return FILE_OR_LINK

async def handle_model_name(update: Update, context: ContextTypes.DEFAULT_TYPE):
    if update.message.text == "‚ùå –û—Ç–º–µ–Ω–∞":
        return await cancel_form(update, context)
    
    if update.message.text == "‚è≠ –ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å":
        if 'link' in context.user_data:
            await update.message.reply_text(
                "<b>3. –î–æ–±–∞–≤—å—Ç–µ –æ–ø–∏—Å–∞–Ω–∏–µ –º–æ–¥–µ–ª–∏ (–∏–ª–∏ –ø—Ä–æ–ø—É—Å—Ç–∏—Ç–µ):</b>\n\n"
                "<i>üìå –ß—Ç–æ —Å—Ç–æ–∏—Ç —É–∫–∞–∑–∞—Ç—å:</i>\n"
                "- –ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ –¥–µ—Ç–∞–ª–∏\n"
                "- –û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–∏\n"
                "- –ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏\n\n"
                "<i>–ü—Ä–∏–º–µ—Ä—ã:</i>\n" + "\n".join(EXAMPLE_DESCRIPTIONS),
                reply_markup=skip_or_finish(),
                parse_mode='HTML'
            )
            return DESCRIPTION
        await update.message.reply_text(
            "<b>‚ö†Ô∏è –î–ª—è —Ñ–∞–π–ª–æ–≤ –Ω–∞–∑–≤–∞–Ω–∏–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ!</b>",
            reply_markup=cancel_keyboard(),
            parse_mode='HTML'
        )
        return MODEL_NAME
    
    if update.message.text == "‚úÖ –ó–∞–≤–µ—Ä—à–∏—Ç—å":
        return await finish_form(update, context)
    
    context.user_data['model_name'] = update.message.text
    await update.message.reply_text(
        "<b>3. –û–ø–∏—à–∏—Ç–µ –º–æ–¥–µ–ª—å:</b>\n\n"
        "<i>üìå –ß—Ç–æ —Å—Ç–æ–∏—Ç —É–∫–∞–∑–∞—Ç—å:</i>\n"
        "- –î–ª—è —á–µ–≥–æ —ç—Ç–∞ –¥–µ—Ç–∞–ª—å\n"
        "- –ö–∞–∫ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç—Å—è\n"
        "- –ö–∞–∫–∏–µ –ø—Ä–æ–±–ª–µ–º—ã —Ä–µ—à–∞–µ—Ç\n\n"
        "<i>–ü—Ä–∏–º–µ—Ä—ã:</i>\n" + "\n".join(EXAMPLE_DESCRIPTIONS),
        reply_markup=skip_or_finish() if 'link' in context.user_data else cancel_keyboard(),
        parse_mode='HTML'
    )
    return DESCRIPTION

async def handle_description(update: Update, context: ContextTypes.DEFAULT_TYPE):
    if update.message.text == "‚ùå –û—Ç–º–µ–Ω–∞":
        return await cancel_form(update, context)
    
    if update.message.text == "‚è≠ –ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å":
        if 'link' in context.user_data:
            await update.message.reply_text(
                "<b>4. –î–ª—è –∫–∞–∫–∏—Ö –º–æ–Ω–æ–∫–æ–ª—ë—Å –ø–æ–¥—Ö–æ–¥–∏—Ç?</b>\n\n"
                "<i>üìå –ü—Ä–∏–º–µ—Ä—ã:</i>\n"
                "- Kingsong 16X, 18XL\n"
                "- –í—Å–µ –º–æ–Ω–æ–∫–æ–ª—ë—Å–∞ —Å –¥–∏–∞–º–µ—Ç—Ä–æ–º 18\"\n"
                "- InMotion V11/V12",
                reply_markup=skip_or_finish(),
                parse_mode='HTML'
            )
            return WHEEL_COMPAT
        await update.message.reply_text(
            "<b>‚ö†Ô∏è –î–ª—è —Ñ–∞–π–ª–æ–≤ –æ–ø–∏—Å–∞–Ω–∏–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ!</b>",
            reply_markup=cancel_keyboard(),
            parse_mode='HTML'
        )
        return DESCRIPTION
    
    if update.message.text == "‚úÖ –ó–∞–≤–µ—Ä—à–∏—Ç—å":
        return await finish_form(update, context)
    
    context.user_data['description'] = update.message.text
    await update.message.reply_text(
        "<b>4. –î–ª—è –∫–∞–∫–∏—Ö –º–æ–¥–µ–ª–µ–π –ø–æ–¥—Ö–æ–¥–∏—Ç?</b>\n\n"
        "<i>üìå –ú–æ–∂–Ω–æ —É–∫–∞–∑–∞—Ç—å:</i>\n"
        "- –ö–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ –º–æ–¥–µ–ª–∏ (Kingsong 16X)\n"
        "- –•–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ (–∫–æ–ª—ë—Å–∞ 18\" –∏ –±–æ–ª—å—à–µ)\n"
        "- –û—Å–æ–±—ã–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è",
        reply_markup=skip_or_finish(),
        parse_mode='HTML'
    )
    return WHEEL_COMPAT

async def handle_wheel_compat(update: Update, context: ContextTypes.DEFAULT_TYPE):
    if update.message.text == "‚ùå –û—Ç–º–µ–Ω–∞":
        return await cancel_form(update, context)
    
    if update.message.text not in ["‚è≠ –ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å", "‚úÖ –ó–∞–≤–µ—Ä—à–∏—Ç—å"]:
        context.user_data['wheel_compat'] = update.message.text
    
    if update.message.text == "‚úÖ –ó–∞–≤–µ—Ä—à–∏—Ç—å":
        return await finish_form(update, context)
    
    await update.message.reply_text(
        "<b>5. –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –ø–µ—á–∞—Ç–∏:</b>\n\n"
        "<i>üìå –ß—Ç–æ —É–∫–∞–∑–∞—Ç—å:</i>\n"
        "- –ú–∞—Ç–µ—Ä–∏–∞–ª (PLA, PETG, ABS)\n"
        "- –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–µ—á–∞—Ç–∏\n"
        "- –ù–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç—å –ø–æ–¥–¥–µ—Ä–∂–µ–∫\n\n"
        "<i>–ü—Ä–∏–º–µ—Ä:</i> PETG, 100% –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ, —Å—Ç–µ–Ω–∫–∏ 1.2–º–º, –ø–æ–¥–¥–µ—Ä–∂–∫–∏ –Ω—É–∂–Ω—ã",
        reply_markup=skip_or_finish(),
        parse_mode='HTML'
    )
    return PRINT_SETTINGS

async def handle_print_settings(update: Update, context: ContextTypes.DEFAULT_TYPE):
    if update.message.text == "‚ùå –û—Ç–º–µ–Ω–∞":
        return await cancel_form(update, context)
    
    if update.message.text not in ["‚è≠ –ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å", "‚úÖ –ó–∞–≤–µ—Ä—à–∏—Ç—å"]:
        context.user_data['print_settings'] = update.message.text
    
    if update.message.text == "‚úÖ –ó–∞–≤–µ—Ä—à–∏—Ç—å":
        return await finish_form(update, context)
    
    await update.message.reply_text(
        "<b>6. –í—ã –∞–≤—Ç–æ—Ä —ç—Ç–æ–π –º–æ–¥–µ–ª–∏?</b>\n\n"
        "<i>–≠—Ç–æ –ø–æ–º–æ–∂–µ—Ç –ø—Ä–∞–≤–∏–ª—å–Ω–æ —É–∫–∞–∑–∞—Ç—å –∞–≤—Ç–æ—Ä—Å—Ç–≤–æ –Ω–∞ —Å–∞–π—Ç–µ</i>",
        reply_markup=yes_no_keyboard(),
        parse_mode='HTML'
    )
    return IS_AUTHOR

async def handle_is_author(update: Update, context: ContextTypes.DEFAULT_TYPE):
    if update.message.text == "‚ùå –û—Ç–º–µ–Ω–∞":
        return await cancel_form(update, context)
    
    if update.message.text not in ["‚úÖ –î–∞", "‚ùå –ù–µ—Ç"]:
        await update.message.reply_text(
            "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –î–∞ –∏–ª–∏ –ù–µ—Ç",
            reply_markup=yes_no_keyboard()
        )
        return IS_AUTHOR
    
    context.user_data['is_author'] = update.message.text == "‚úÖ –î–∞"
    
    if context.user_data['is_author']:
        await update.message.reply_text(
            "<b>7. –ö–∞–∫ –≤–∞—Å —É–∫–∞–∑–∞—Ç—å –∫–∞–∫ –∞–≤—Ç–æ—Ä–∞?</b>\n\n"
            "<i>üìå –ü—Ä–∏–º–µ—Ä—ã:</i>\n"
            "- –ò–≤–∞–Ω –ü–µ—Ç—Ä–æ–≤\n"
            "- @monowheel_designer\n"
            "- –ú–∞–∫—Å–∏–º (Telegram: @max_msk)",
            reply_markup=skip_or_finish(),
            parse_mode='HTML'
        )
        return AUTHOR_INFO
    
    return await finish_form(update, context)

async def handle_author_info(update: Update, context: ContextTypes.DEFAULT_TYPE):
    if update.message.text == "‚ùå –û—Ç–º–µ–Ω–∞":
        return await cancel_form(update, context)
    
    if update.message.text == "‚è≠ –ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å":
        await update.message.reply_text(
            "<b>8. –†–∞–∑—Ä–µ—à–∞–µ—Ç–µ –æ–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å –Ω–∞ Thingiverse?</b>\n\n"
            "<i>–ú—ã –º–æ–∂–µ–º —Ä–∞–∑–º–µ—Å—Ç–∏—Ç—å –º–æ–¥–µ–ª—å –Ω–∞ –Ω–∞—à–µ–º –∞–∫–∫–∞—É–Ω—Ç–µ thingiverse.com/eucer_ru</i>",
            reply_markup=yes_no_keyboard(),
            parse_mode='HTML'
        )
        return THINGIVERSE
    
    if update.message.text == "‚úÖ –ó–∞–≤–µ—Ä—à–∏—Ç—å":
        return await finish_form(update, context)
    
    context.user_data['author_info'] = update.message.text
    await update.message.reply_text(
        "<b>8. –†–∞–∑—Ä–µ—à–∞–µ—Ç–µ –æ–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å –Ω–∞ Thingiverse?</b>\n\n"
        "<i>–ú—ã –º–æ–∂–µ–º —Ä–∞–∑–º–µ—Å—Ç–∏—Ç—å –º–æ–¥–µ–ª—å –Ω–∞ –Ω–∞—à–µ–º –∞–∫–∫–∞—É–Ω—Ç–µ thingiverse.com/eucer_ru</i>",
        reply_markup=yes_no_keyboard(),
        parse_mode='HTML'
    )
    return THINGIVERSE

async def handle_thingiverse(update: Update, context: ContextTypes.DEFAULT_TYPE):
    if update.message.text == "‚ùå –û—Ç–º–µ–Ω–∞":
        return await cancel_form(update, context)
    
    if update.message.text not in ["‚úÖ –î–∞", "‚ùå –ù–µ—Ç"]:
        await update.message.reply_text(
            "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –î–∞ –∏–ª–∏ –ù–µ—Ç",
            reply_markup=yes_no_keyboard()
        )
        return THINGIVERSE
    
    context.user_data['thingiverse'] = update.message.text == "‚úÖ –î–∞"
    await update.message.reply_text(
        "<b>9. –ü–æ–∫–∞–∑—ã–≤–∞—Ç—å –≤–∞—Å –∫–∞–∫ –∞–≤—Ç–æ—Ä–∞ –Ω–∞ —Å–∞–π—Ç–µ?</b>\n\n"
        "<i>–í–∞—à–µ –∏–º—è/–Ω–∏–∫ –±—É–¥–µ—Ç —É–∫–∞–∑–∞–Ω–æ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ –º–æ–¥–µ–ª–∏</i>",
        reply_markup=yes_no_keyboard(),
        parse_mode='HTML'
    )
    return SHOW_AUTHOR

async def handle_show_author(update: Update, context: ContextTypes.DEFAULT_TYPE):
    if update.message.text == "‚ùå –û—Ç–º–µ–Ω–∞":
        return await cancel_form(update, context)
    
    if update.message.text not in ["‚úÖ –î–∞", "‚ùå –ù–µ—Ç"]:
        await update.message.reply_text(
            "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –î–∞ –∏–ª–∏ –ù–µ—Ç",
            reply_markup=yes_no_keyboard()
        )
        return SHOW_AUTHOR
    
    context.user_data['show_author'] = update.message.text == "‚úÖ –î–∞"
    return await finish_form(update, context)

async def finish_form(update: Update, context: ContextTypes.DEFAULT_TYPE):
    try:
        user = update.effective_user
        admin_message = format_user_info(user) + "<b>üì§ –ù–æ–≤–∞—è –º–æ–¥–µ–ª—å –¥–ª—è —Å–∞–π—Ç–∞</b>\n\n"
        
        if 'file' in context.user_data:
            file_info = (
                f"üìÑ <b>–§–∞–π–ª:</b> {context.user_data['file']['name']}\n"
                f"üî¢ <b>–¢–∏–ø:</b> {'3D-–º–æ–¥–µ–ª—å' if context.user_data['is_3d'] else '–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ'}\n"
            )
            if context.user_data.get('file_caption'):
                file_info += f"üìù <b>–ü–æ–¥–ø–∏—Å—å:</b> {context.user_data['file_caption']}\n"
            
            admin_message += file_info
        elif 'link' in context.user_data:
            admin_message += f"üîó <b>–°—Å—ã–ª–∫–∞:</b> {context.user_data['link']}\n"
        
        # –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –º–æ–¥–µ–ª–∏
        model_info = []
        if 'model_name' in context.user_data:
            model_info.append(f"üè∑ <b>–ù–∞–∑–≤–∞–Ω–∏–µ:</b> {context.user_data['model_name']}")
        if 'description' in context.user_data:
            model_info.append(f"üìù <b>–û–ø–∏—Å–∞–Ω–∏–µ:</b> {context.user_data['description']}")
        if 'wheel_compat' in context.user_data:
            model_info.append(f"üõ¥ <b>–î–ª—è –º–æ–¥–µ–ª–µ–π:</b> {context.user_data['wheel_compat']}")
        if 'print_settings' in context.user_data:
            model_info.append(f"üñ® <b>–ü–µ—á–∞—Ç—å:</b> {context.user_data['print_settings']}")
        
        if model_info:
            admin_message += "\n\n" + "\n".join(model_info)
        
        # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –∞–≤—Ç–æ—Ä–µ
        if context.user_data.get('is_author', False):
            author_info = []
            if 'author_info' in context.user_data:
                author_info.append(f"üë§ <b>–ê–≤—Ç–æ—Ä:</b> {context.user_data['author_info']}")
            if 'thingiverse' in context.user_data:
                author_info.append(f"üåê <b>Thingiverse:</b> {'–î–∞' if context.user_data['thingiverse'] else '–ù–µ—Ç'}")
            if 'show_author' in context.user_data:
                author_info.append(f"üëÄ <b>–ü–æ–∫–∞–∑—ã–≤–∞—Ç—å –∞–≤—Ç–æ—Ä–∞:</b> {'–î–∞' if context.user_data['show_author'] else '–ù–µ—Ç'}")
            
            if author_info:
                admin_message += "\n\n" + "\n".join(author_info)
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–∞–π–ª/—Å—Å—ã–ª–∫—É
        if 'file' in context.user_data:
            await context.bot.send_document(
                chat_id=GROUP_CHAT_ID,
                document=context.user_data['file']['id'],
                caption=admin_message,
                parse_mode='HTML',
                reply_markup=get_reply_button(user.id)
            )
        else:
            await context.bot.send_message(
                chat_id=GROUP_CHAT_ID,
                text=admin_message,
                parse_mode='HTML',
                reply_markup=get_reply_button(user.id)
            )
        
        await update.message.reply_text(
            "<b>‚úÖ –°–ø–∞—Å–∏–±–æ! –í–∞—à–∞ –º–æ–¥–µ–ª—å –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –Ω–∞ –º–æ–¥–µ—Ä–∞—Ü–∏—é.</b>\n\n"
            "–ü–æ—Å–ª–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –æ–Ω–∞ –±—É–¥–µ—Ç –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–∞ –Ω–∞ —Å–∞–π—Ç–µ eucer.ru",
            reply_markup=main_menu(),
            parse_mode='HTML'
        )
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞: {e}")
        await update.message.reply_text(
            "<b>‚ö†Ô∏è –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ</b>\n–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.",
            reply_markup=main_menu(),
            parse_mode='HTML'
        )
    finally:
        context.user_data.clear()
        return ConversationHandler.END

async def cancel_form(update: Update, context: ContextTypes.DEFAULT_TYPE):
    context.user_data.clear()
    await update.message.reply_text(
        "‚ùå –û—Ç–ø—Ä–∞–≤–∫–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞",
        reply_markup=main_menu()
    )
    return ConversationHandler.END

async def handle_regular_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ–±—ã—á–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –≤–Ω–µ —Ñ–æ—Ä–º—ã"""
    if update.message.text in ["üì§ –û—Ç–ø—Ä–∞–≤–∏—Ç—å –º–æ–¥–µ–ª—å", "‚ÑπÔ∏è –û –±–æ—Ç–µ", "‚ùå –û—Ç–º–µ–Ω–∞"]:
        return
    
    try:
        await forward_to_admins(update, context)
        await update.message.reply_text(
            "‚úÖ –í–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–µ—Ä–µ—Å–ª–∞–Ω–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º",
            reply_markup=main_menu()
        )
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ—Å—ã–ª–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")
        await update.message.reply_text(
            "‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø–µ—Ä–µ—Å–ª–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º",
            reply_markup=main_menu()
        )

async def error_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
    logger.error(f"–û—à–∏–±–∫–∞: {context.error}")
    try:
        await update.message.reply_text(
            "<b>‚ö†Ô∏è –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞</b>\n–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.",
            reply_markup=main_menu(),
            parse_mode='HTML'
        )
    except:
        pass

def main():
    application = Application.builder().token(BOT_TOKEN).build()
    
    application.add_error_handler(error_handler)
    application.add_handler(CommandHandler("start", start))
    application.add_handler(MessageHandler(filters.Regex(r'^‚ÑπÔ∏è –û –±–æ—Ç–µ$'), about))
    
    form_conv = ConversationHandler(
        entry_points=[MessageHandler(filters.Regex(r'^üì§ –û—Ç–ø—Ä–∞–≤–∏—Ç—å –º–æ–¥–µ–ª—å$'), form_start)],
        states={
            FILE_OR_LINK: [MessageHandler(filters.ALL, handle_file_or_link)],
            MODEL_NAME: [MessageHandler(filters.TEXT, handle_model_name)],
            DESCRIPTION: [MessageHandler(filters.TEXT, handle_description)],
            WHEEL_COMPAT: [MessageHandler(filters.TEXT, handle_wheel_compat)],
            PRINT_SETTINGS: [MessageHandler(filters.TEXT, handle_print_settings)],
            IS_AUTHOR: [MessageHandler(filters.TEXT, handle_is_author)],
            AUTHOR_INFO: [MessageHandler(filters.TEXT, handle_author_info)],
            THINGIVERSE: [MessageHandler(filters.TEXT, handle_thingiverse)],
            SHOW_AUTHOR: [MessageHandler(filters.TEXT, handle_show_author)],
        },
        fallbacks=[MessageHandler(filters.Regex(r'^‚ùå –û—Ç–º–µ–Ω–∞$'), cancel_form)],
    )
    
    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –æ–±—ã—á–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –≤–Ω–µ —Ñ–æ—Ä–º—ã
    application.add_handler(MessageHandler(
        filters.TEXT & ~filters.Regex(r'^(üì§ –û—Ç–ø—Ä–∞–≤–∏—Ç—å –º–æ–¥–µ–ª—å|‚ÑπÔ∏è –û –±–æ—Ç–µ|‚ùå –û—Ç–º–µ–Ω–∞)$') & ~filters.COMMAND,
        handle_regular_message
    ))
    
    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –º–µ–¥–∏–∞—Ñ–∞–π–ª–æ–≤ –≤–Ω–µ —Ñ–æ—Ä–º—ã
    application.add_handler(MessageHandler(
        (filters.Document.ALL | filters.PHOTO | filters.VIDEO) & ~filters.COMMAND,
        handle_regular_message
    ))
    
    application.add_handler(form_conv)
    application.run_polling()

if __name__ == '__main__':
    main()
